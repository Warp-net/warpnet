name: Member Node Release

on:
  workflow_dispatch:

env:
  GO_VERSION: '1.24'
  RELEASE_TAG:
  CGO_ENABLED: '1'

jobs:
  release:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux/amd64
          - os: macos-latest
            platform: darwin/arm64
          - os: windows-latest
            platform: windows/amd64

    runs-on: ${{ matrix.os }}
    permissions:
      packages: write
      contents: write
      pull-requests: write
      repository-projects: write

    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0, fetch-tags: true }

      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Resolve tag
        run: |
          if [ "$GITHUB_REF_TYPE" = "tag" ]; then
            echo "RELEASE_TAG=$GITHUB_REF_NAME" >> $GITHUB_ENV
          elif [ -n "${{ github.event.inputs.tag }}" ]; then
            echo "RELEASE_TAG=${{ github.event.inputs.tag }}" >> $GITHUB_ENV
          else
            tag="$(git tag --points-at HEAD | head -n1)"
            [ -n "$tag" ] || { echo 'no tag'; exit 1; }
            echo "RELEASE_TAG=$tag" >> $GITHUB_ENV


      - name: Linux deps
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          sudo apt update
          sudo apt install -y build-essential libgtk-3-dev libwebkit2gtk-4.1-dev

      - name: Install Wails
        run: go install github.com/wailsapp/wails/v2/cmd/wails@v2.10.2

      - name: Build (Wails)
        working-directory: cmd/node/member
        run: wails build -clean -platform ${{ matrix.platform }} -tags webkit2_41

      - name: Package + checksum (Linux)
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          mkdir -p out/linux_amd64
          mv cmd/node/member/build/bin/* out/linux_amd64/warpnet
          tar -C out/linux_amd64 -czf warpnet_${{ env.RELEASE_TAG }}_linux_amd64.tar.gz .
          shasum -a 256 warpnet_${{ env.RELEASE_TAG }}_linux_amd64.tar.gz > warpnet_${{ env.RELEASE_TAG }}_linux_amd64_checksums.txt

      - name: Package + checksum (macOS)
        if: ${{ matrix.os == 'macos-latest' }}
        run: |
          mkdir -p out/darwin_arm64
          mv cmd/node/member/build/bin/* out/darwin_arm64/warpnet
          tar -C out/darwin_arm64 -czf warpnet_${{ env.RELEASE_TAG }}_darwin_arm64.tar.gz .
          shasum -a 256 warpnet_${{ env.RELEASE_TAG }}_darwin_arm64.tar.gz > warpnet_${{ env.RELEASE_TAG }}_darwin_arm64_checksums.txt

      - name: Package + checksum (Windows)
        if: ${{ matrix.os == 'windows-latest' }}
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path out\windows_amd64 | Out-Null
          Move-Item cmd\node\member\build\bin\* out\windows_amd64\warpnet.exe
          Compress-Archive -Path out\windows_amd64\* -DestinationPath "warpnet_${{ env.RELEASE_TAG }}_windows_amd64.zip" -Force
          (Get-FileHash "warpnet_${{ env.RELEASE_TAG }}_windows_amd64.zip" -Algorithm SHA256).Hash + "  warpnet_${{ env.RELEASE_TAG }}_windows_amd64.zip" | Out-File -Encoding ASCII "warpnet_${{ env.RELEASE_TAG }}_windows_amd64_checksums.txt"

      - name: Publish to GitHub Release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.RELEASE_TAG }}
          name: ${{ env.RELEASE_TAG }}
          token: ${{ secrets.GITHUB_TOKEN }}
          files: |
            warpnet_${{ env.RELEASE_TAG }}_linux_amd64.tar.gz
            warpnet_${{ env.RELEASE_TAG }}_linux_amd64_checksums.txt
            warpnet_${{ env.RELEASE_TAG }}_darwin_arm64.tar.gz
            warpnet_${{ env.RELEASE_TAG }}_darwin_arm64_checksums.txt
            warpnet_${{ env.RELEASE_TAG }}_windows_amd64.zip
            warpnet_${{ env.RELEASE_TAG }}_windows_amd64_checksums.txt
        
          

