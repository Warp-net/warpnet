name: Member Node Release

on:
  workflow_dispatch:

env:
  GO_VERSION: '1.24'
  GOFLAGS: -tags=webkit2_41

jobs:
  build-linux:
    runs-on: ubuntu-22.04
    permissions:
      packages: write
      contents: write
      pull-requests: write
      repository-projects: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Install system dependencies
        run: |
          sudo apt update
          sudo apt install -y \
            libgtk-3-dev libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libglib2.0-dev pkg-config \
            libnss3 libx11-xcb-dev libxcomposite-dev libxdamage-dev libxrandr-dev \
            libasound2-dev libatk1.0-dev libcups2-dev libdbus-1-dev libdrm-dev \
            libxext-dev libxfixes-dev libxkbcommon-dev libxrender-dev libxcb1-dev libxtst-dev

      - run: go install github.com/wailsapp/wails/v2/cmd/wails@v2.10.2
      - run: echo "$HOME/go/bin" >> $GITHUB_PATH

      - name: Build Wails app
        run: |
          cd cmd/node/member
          wails build -platform linux/amd64 -clean
          tar -czf member-linux-amd64.tar.gz -C build/bin warpnet

      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: member-linux
          path: cmd/node/member/member-linux-amd64.tar.gz

  build-macos:
    runs-on: macos-14
    permissions:
      packages: write
      contents: write
      pull-requests: write
      repository-projects: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - run: go install github.com/wailsapp/wails/v2/cmd/wails@v2.10.2
      - run: echo "$HOME/go/bin" >> $GITHUB_PATH

      - name: Build Wails app for amd64
        run: |
          cd cmd/node/member
          wails build -platform darwin/amd64 -clean
          tar -czf member-macos-amd64.tar.gz -C build/bin/warpnet.app/Contents/MacOS warpnet

      - name: Build Wails app for arm64
        run: |
          cd cmd/node/member
          wails build -platform darwin/arm64 -clean
          tar -czf member-macos-arm64.tar.gz -C build/bin/warpnet.app/Contents/MacOS warpnet


      - name: Upload macOS amd64
        uses: actions/upload-artifact@v4
        with:
          name: member-macos-amd64
          path: cmd/node/member/member-macos-amd64.tar.gz

      - name: Upload macOS arm64
        uses: actions/upload-artifact@v4
        with:
          name: member-macos-arm64
          path: cmd/node/member/member-macos-arm64.tar.gz

  build-windows:
    runs-on: windows-2022
    permissions:
      packages: write
      contents: write
      pull-requests: write
      repository-projects: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - run: echo "$env:USERPROFILE\\go\\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8

      - name: Install Wails CLI
        run: go install github.com/wailsapp/wails/v2/cmd/wails@v2.10.2

      - name: Build Wails app
        run: |
          cd cmd\node\member
          wails build -platform windows/amd64 -clean
          Compress-Archive -Path build\bin\* -DestinationPath member-windows-amd64.zip

      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: member-windows
          path: cmd/node/member/member-windows-amd64.zip

  release:
    runs-on: ubuntu-24.04
    needs: [ build-linux, build-macos, build-windows ]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Download Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: member-linux
          path: dist/

      - name: Download macOS artifact arm64
        uses: actions/download-artifact@v4
        with:
          name: member-macos-arm64
          path: dist/

      - name: Download macOS artifact amd64
        uses: actions/download-artifact@v4
        with:
          name: member-macos-amd64
          path: dist/

      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: member-windows
          path: dist/

      - name: Install GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: latest
          args: release --clean --config release/goreleaser.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
